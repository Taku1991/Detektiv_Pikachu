name: 🚀 Build and Release

on:
  release:
    types: [published]
  workflow_dispatch: # Erlaubt manuelles Triggern

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 🔨 Build Executables
      run: |
        python build_exe.py
        
    - name: 📁 Create Release Archive
      run: |
        Compress-Archive -Path release\* -DestinationPath DetektivPikachu-Windows-${{ github.ref_name }}.zip
        
    - name: 📊 Show Release Contents
      run: |
        Write-Host "=== Release Verzeichnis ===" -ForegroundColor Green
        Get-ChildItem release\ -Recurse | Select-Object Name, Length | Format-Table
        Write-Host "=== ZIP-Datei ===" -ForegroundColor Green
        Get-ChildItem DetektivPikachu-Windows-${{ github.ref_name }}.zip | Select-Object Name, Length | Format-Table
        
    - name: 🔼 Upload to Release
      uses: ncipollo/release-action@v1
      if: github.event_name == 'release'
      with:
        artifacts: "DetektivPikachu-Windows-${{ github.ref_name }}.zip"
        token: ${{ secrets.PAT_TOKEN }}
        allowUpdates: true
        omitBodyDuringUpdate: true
        omitNameDuringUpdate: true
        
    - name: 📤 Upload Build Artifact (for manual runs)
      uses: actions/upload-artifact@v4
      if: github.event_name == 'workflow_dispatch'
      with:
        name: DetektivPikachu-Windows-Build
        path: DetektivPikachu-Windows-${{ github.ref_name }}.zip
        retention-days: 30

  update-release-notes:
    runs-on: ubuntu-latest
    needs: build-windows
    if: github.event_name == 'release'
    
    steps:
    - name: 📝 Update Release Notes
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.PAT_TOKEN }}
        script: |
          const { owner, repo } = context.repo;
          const release = await github.rest.repos.getRelease({
            owner,
            repo,
            release_id: context.payload.release.id
          });
          
          const additionalNotes = `
          
          ## 📦 Installation (Windows EXE)
          
          1. **Lade die ZIP-Datei herunter**: \`DetektivPikachu-Windows-${{ github.ref_name }}.zip\`
          2. **Entpacke** die Datei in einen Ordner deiner Wahl
          3. **Starten**: Doppelklick auf \`Detektiv_Pikachu_starten.bat\` oder \`DetektivPikachu.exe\`
          4. **Erste Einrichtung**: Bot fragt automatisch nach den Bot-Tokens
          5. **Fertig**: Bot startet automatisch nach der Eingabe
          
          ## 📂 Verzeichnisstruktur nach Installation
          
          \`\`\`
          DetektivPikachu/
          ├── 🚀 DetektivPikachu.exe              # Haupt-EXE (All-in-One)
          ├── 📁 _internal/                       # PyInstaller Dependencies
          ├── 🎯 Detektiv_Pikachu_starten.bat    # Einfaches Start-Skript
          ├── 📁 data/                            # Bot-Daten (automatisch erstellt)
          │   ├── json/                           # Status & Verlauf
          │   ├── logs/                           # Log-Dateien
          │   └── gif/                            # GIF-Cache
          ├── 📄 .env                             # Konfiguration (automatisch erstellt)
          ├── 📄 README.md                        # Vollständige Dokumentation
          └── 📄 LICENSE                          # MIT Lizenz
          \`\`\`
          
          ## ✨ Neue Features dieser Version
          
          - ✅ **Ultra-Einfaches Setup** - Nur EXE starten → Tokens eingeben → fertig!
          - ✅ **Automatische Token-Abfrage** - Keine manuellen Konfigurationsdateien nötig
          - ✅ **Ein-Klick-Start** - Detektiv_Pikachu_starten.bat macht alles automatisch
          - ✅ **Intelligente Validierung** - Überprüft Token-Format automatisch
          - ✅ **Dual-Bot-System** - Haupt-Bot + Helper-Bot mit Token-Balancing
          - ✅ **Channel-Lock-System** - Automatische Rollensperrung bei Problemen
          - ✅ **Kein Setup-Tool nötig** - Alles direkt in der EXE integriert
          
          ## 🚀 Super-Schnellstart (nur 3 Schritte!)
          
          1. **ZIP entpacken**
          2. **Detektiv_Pikachu_starten.bat** ausführen
          3. **Bot-Tokens eingeben** (nur beim ersten Mal)
          
          **Das war's!** 🎉
          
          ## 🔧 Erweiterte Installation (Python-Entwickler)
          
          \`\`\`bash
          git clone https://github.com/${{ github.repository }}.git
          cd Detektiv_Pikachu
          pip install -r requirements.txt
          python launcher.py          # Startet beide Bots (fragt nach Tokens falls nötig)
          \`\`\`
          
          ## 🔑 Bot-Tokens erstellen
          
          1. Gehe zu [Discord Developer Portal](https://discord.com/developers/applications)
          2. Erstelle zwei neue Applications
          3. Gehe zu "Bot" → "Reset Token" für jeden Bot
          4. Kopiere die Tokens und gib sie beim ersten Start ein
          
          ## 🐛 Problembehandlung
          
          - **Token-Probleme**: Lösche die \`.env\` Datei und starte erneut für neue Token-Eingabe
          - **"Import Error"**: Nutze die EXE-Version oder installiere \`pip install -r requirements.txt\`
          - **Bot startet nicht**: Überprüfe Internetverbindung und Token-Gültigkeit
          - **Weitere Hilfe**: [Discord Server](https://discord.gg/pokemonhideout)
          `;
          
          await github.rest.repos.updateRelease({
            owner,
            repo,
            release_id: context.payload.release.id,
            body: release.data.body + additionalNotes
          });